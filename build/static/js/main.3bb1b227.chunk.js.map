{"version":3,"sources":["App.module.css","components/Header/Header.module.css","components/Loading/Loading.module.css","components/Loading/loadingImage.svg","components/Card/Card.module.css","components/Header/Header.js","components/Loading/Loading.js","components/Card/Card.js","pages/History/History.js","pages/Rockets/Rockets.js","pages/RocketDetails/RocketDetails.js","pages/About/About.js","pages/Missions/Mission.js","pages/launchpads/launchpad.js","pages/landpads/landpad.js","pages/launches/launches.js","pages/Ships/Ships.js","pages/ShipDetails/ShipDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","styles","header","to","Loading","loading","src","loadingImage","alt","Card","props","children","card","History","useState","setLoading","history","setHistory","useEffect","loadingTimer","setTimeout","clearTimeout","axios","get","then","response","data","Fragment","map","hist","id","title","event_date_utc","details","href","links","wikipedia","target","rel","Rockets","rockets","setRockets","rock","rocket_id","rocket_name","cost_per_launch","success_rate_pct","RocketDetails","rocketDetailsId","match","params","rocketDetails","setRocketDetails","description","country","About","info","setInfo","name","founded","ceo","coo","valuation","summary","Mission","mission","setMission","mission_name","LaunchPads","launchpads","setLaunchpads","status","attempted_launches","successful_launches","Landpads","landpads","setLandpads","full_name","attempted_landings","successful_landings","Launches","launches","setLaunches","launch_year","launch_site","site_name","Ships","ships","setShips","ship_id","ship_name","ship_type","ShipDetails","shipDetailsId","shipDetails","setShipDetails","weight_kg","year_built","App","app","content","exact","path","component","Launchpad","Landpad","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3bb1b227.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__2JaUi\"};","module.exports = __webpack_public_path__ + \"static/media/loadingImage.8d382ac1.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Header.module.css';\n\nconst Header = () => {\n    return (\n        <header className={styles.header}>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to='/'>History</Link>\n                    </li>\n                    <li>\n                        <Link to='/mission'>Mission</Link>\n                    </li>\n                    <li>\n                        <Link to='/launches'>Launches</Link>\n                    </li>\n                    <li>\n                        <Link to='/launchpad'>Launchpads</Link>\n                    </li>\n                    <li>\n                        <Link to='/landpad'>Landingpads</Link>\n                    </li>\n                    <li>\n                        <Link to='/rockets'>Rockets</Link>\n                    </li>\n                    <li>\n                        <Link to='/ships'>Ships</Link>\n                    </li>\n                    <li>\n                        <Link to='/about'>About</Link>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport styles from './Loading.module.css';\nimport loadingImage from './loadingImage.svg';\n\nconst Loading = () => {\n    return (\n        <div className={styles.loading}>\n            <img src={loadingImage} alt=\"Loading!\" />\n        </div>\n    );\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Card.module.css';\n\nconst Card = (props) => {\n    const { children } = props;\n    return (\n        <div className={styles.card}>\n            {children}\n        </div>\n    );\n}\n\nCard.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.node,\n    ]),\n}\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Loading from '../../components/Loading/Loading';\nimport Card from '../../components/Card/Card';\n\nconst History = () => {\n    \n    const [ loading, setLoading ] = useState(true);\n    const [ history, setHistory ] = useState([]);\n    \n    useEffect(() => {\n        const loadingTimer = setTimeout(() => {\n            clearTimeout(loadingTimer);\n            axios.get('https://api.spacexdata.com/v3/history').then((response) => {\n                //console.log(response.data);\n                setHistory(response.data);\n                setLoading(false);\n            });\n        }, 1500);\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                // Run loader animation\n                loading ? (\n                    <Loading />\n                ) : (\n                    // Load each history item from the history array\n                    <React.Fragment>\n                        { \n                            history.map((hist) => {\n                                return (\n                                    <div id={hist.id}>\n                                        <Card>\n                                            <b>Title:</b> {hist.title}<br />\n                                            <b>Event Date UTC:</b> {hist.event_date_utc}<br />\n                                            <b>Details:</b> {hist.details}<br />\n                                            <a href={hist.links.wikipedia} target=\"_blank\" rel=\"noopener noreferrer\">Wikipedia</a>\n                                        </Card>\n                                    </div>\n                                );\n                            })\n                        }            \n                    </React.Fragment>\n                )};\n            }\n        </React.Fragment>\n    );\n}\n\nexport default History;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Loading from '../../components/Loading/Loading';\nimport Card from '../../components/Card/Card';\n\nconst Rockets = () => {\n    \n    const [ loading, setLoading ] = useState(true);\n    const [ rockets, setRockets ] = useState([]);\n    \n    useEffect(() => {\n        const loadingTimer = setTimeout(() => {\n            clearTimeout(loadingTimer);\n            axios.get('https://api.spacexdata.com/v3/rockets').then((response) => {\n                //console.log(response.data);\n                setRockets(response.data);\n                setLoading(false);\n            });\n        }, 1500);\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                // Run loader animation\n                loading ? (\n                    <Loading />\n                ) : (\n                    // Load each rocket from the rocket array\n                    <React.Fragment>\n                        { \n                            rockets.map((rock) => {\n                                return (\n                                    <div id={rock.id}>\n                                        <Link to={`/rockets/${rock.rocket_id}`}>\n                                            <Card>\n                                                <b>Rocket Name:</b> {rock.rocket_name}<br />\n                                                <b>Cost per launch:</b> {rock.cost_per_launch}<br />\n                                                <b>Success Rate:</b> {rock.success_rate_pct} percent<br />\n                                            </Card>\n                                        </Link>\n                                    </div>\n                                );\n                            })\n                        }            \n                    </React.Fragment>\n                )\n            }\n        </React.Fragment>\n    );\n}\n\nexport default Rockets;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nimport Loading from '../../components/Loading/Loading';\nimport Card from '../../components/Card/Card';\n\nconst RocketDetails = (props) => {\n    \n    const { rocketDetailsId } = props.match.params;\n\n    const [ loading, setLoading ] = useState(true);\n    const [ rocketDetails, setRocketDetails ] = useState({});\n    \n    useEffect(() => {\n        const loadingTimer = setTimeout(() => {\n            clearTimeout(loadingTimer);\n            axios.get(`https://api.spacexdata.com/v3/rockets/${rocketDetailsId}`).then((response) => {\n                //console.log(response.data);\n                setRocketDetails(response.data);\n                setLoading(false);\n            });\n        }, 1500);\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                // Run loader animation\n                loading ? (\n                    <Loading />\n                ) : (\n                    // Load info for this rocket\n                    <React.Fragment>\n                        { \n                            <div>\n                                <Card>\n                                    <b>Rocket Name:</b> {rocketDetails.rocket_name}<br />\n                                    <b>Description:</b> {rocketDetails.description}<br />\n                                    <b>Country:</b> {rocketDetails.country}<br />\n                                    <Link to=\"/rockets\">Back to rockets</Link>\n                                </Card>\n                            </div>\n                        }            \n                    </React.Fragment>\n                )\n            }\n        </React.Fragment>\n    );\n}\n\nRocketDetails.propTypes = {\n    rocketDetailsId: PropTypes.oneOfType([\n        PropTypes.string,\n    ]),\n}\n\nexport default RocketDetails;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Loading from '../../components/Loading/Loading';\nimport Card from '../../components/Card/Card';\n\nconst About = () => {\n    \n    const [ loading, setLoading ] = useState(true);\n    const [ info, setInfo ] = useState([]);\n    \n    useEffect(() => {\n        const loadingTimer = setTimeout(() => {\n            clearTimeout(loadingTimer);\n            axios.get('https://api.spacexdata.com/v3/info').then((response) => {\n                //console.log(response.data);\n                setInfo(response.data);\n                setLoading(false);\n            });\n        }, 1500);\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                // Run loader animation\n                loading ? (\n                    <Loading />\n                ) : (\n                    // Load about info\n                    <React.Fragment>\n                        <Card>\n                            <b>Name:</b> {info.name}<br />\n                            <b>Founded Year:</b> {info.founded}<br />\n                            <b>CEO:</b> {info.ceo}<br />\n                            <b>COO:</b> {info.coo}<br />\n                            <b>Valuation:</b> {info.valuation}<br />\n                            <b>Summary:</b> {info.summary}<br />\n                            <Link to=\"/\">Back to main page</Link>\n                        </Card>\n                    </React.Fragment>\n                )\n            }\n        </React.Fragment>\n    );\n}\n\nexport default About;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Loading from '../../components/Loading/Loading';\nimport Card from '../../components/Card/Card';\n\nconst Mission = () => {\n    \n    const [ loading, setLoading ] = useState(true);\n    const [ mission, setMission ] = useState([]);\n    \n    useEffect(() => {\n        const loadingTimer = setTimeout(() => {\n            clearTimeout(loadingTimer);\n            axios.get('https://api.spacexdata.com/v3/missions').then((response) => {\n                //console.log(response.data);\n                setMission(response.data);\n                setLoading(false);\n            });\n        }, 1500);\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                // Run loader animation\n                loading ? (\n                    <Loading />\n                ) : (\n                    // Load each history item from the history array\n                    <React.Fragment>\n                        { \n                            mission.map((hist) => {\n                                return (\n                                    <div id={hist.id}>\n                                        <Card>\n                                            <b>Title:</b> {hist.mission_name}<br />\n                                            <b>Details:</b> {hist.description}<br />\n                                            <a href={hist.wikipedia} target=\"_blank\" rel=\"noopener noreferrer\">Wikipedia</a>\n                                        </Card>\n                                    </div>\n                                );\n                            })\n                        }            \n                    </React.Fragment>\n                )};\n            }\n        </React.Fragment>\n    );\n}\n\nexport default Mission;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Loading from '../../components/Loading/Loading';\nimport Card from '../../components/Card/Card';\n\nconst LaunchPads = () => {\n    \n    const [ loading, setLoading ] = useState(true);\n    const [ launchpads, setLaunchpads ] = useState([]);\n    \n    useEffect(() => {\n        const loadingTimer = setTimeout(() => {\n            clearTimeout(loadingTimer);\n            axios.get('https://api.spacexdata.com/v3/launchpads').then((response) => {\n                //console.log(response.data);\n                setLaunchpads(response.data);\n                setLoading(false);\n            });\n        }, 1500);\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                // Run loader animation\n                loading ? (\n                    <Loading />\n                ) : (\n                    // Load each history item from the history array\n                    <React.Fragment>\n                        { \n                            launchpads.map((hist) => {\n                                return (\n                                    <div id={hist.id}>\n                                        <Card>\n                                            <b>Name:</b> {hist.name}<br />\n                                            <b>Status:</b> {hist.status}<br />\n                                            <b>Attempted:</b> {hist.attempted_launches}<br />\n                                            <b>Successful:</b> {hist.successful_launches}<br />\n                                            <b>Details:</b> {hist.details}<br />\n                                            <a href={hist.wikipedia} target=\"_blank\" rel=\"noopener noreferrer\">Wikipedia</a>\n                                        </Card>\n                                    </div>\n                                );\n                            })\n                        }            \n                    </React.Fragment>\n                )};\n            }\n        </React.Fragment>\n    );\n}\n\nexport default LaunchPads;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Loading from '../../components/Loading/Loading';\nimport Card from '../../components/Card/Card';\n\nconst Landpads = () => {\n    \n    const [ loading, setLoading ] = useState(true);\n    const [ landpads, setLandpads ] = useState([]);\n    \n    useEffect(() => {\n        const loadingTimer = setTimeout(() => {\n            clearTimeout(loadingTimer);\n            axios.get('https://api.spacexdata.com/v3/landpads').then((response) => {\n                //console.log(response.data);\n                setLandpads(response.data);\n                setLoading(false);\n            });\n        }, 1500);\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                // Run loader animation\n                loading ? (\n                    <Loading />\n                ) : (\n                    // Load each history item from the history array\n                    <React.Fragment>\n                        { \n                            landpads.map((hist) => {\n                                return (\n                                    <div id={hist.id}>\n                                        <Card>\n                                            <b>Name:</b> {hist.full_name}<br />\n                                            <b>Status:</b> {hist.status}<br />\n                                            <b>Attempted:</b> {hist.attempted_landings}<br />\n                                            <b>Successful:</b> {hist.successful_landings}<br />\n                                            <b>Details:</b> {hist.details}<br />\n                                            <a href={hist.wikipedia} target=\"_blank\" rel=\"noopener noreferrer\">Wikipedia</a>\n                                        </Card>\n                                    </div>\n                                );\n                            })\n                        }            \n                    </React.Fragment>\n                )};\n            }\n        </React.Fragment>\n    );\n}\n\nexport default Landpads;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Loading from '../../components/Loading/Loading';\nimport Card from '../../components/Card/Card';\n\nconst Launches = () => {\n    \n    const [ loading, setLoading ] = useState(true);\n    const [ launches, setLaunches ] = useState([]);\n    \n    useEffect(() => {\n        const loadingTimer = setTimeout(() => {\n            clearTimeout(loadingTimer);\n            axios.get('https://api.spacexdata.com/v3/launches').then((response) => {\n                //console.log(response.data);\n                setLaunches(response.data);\n                setLoading(false);\n            });\n        }, 1500);\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                // Run loader animation\n                loading ? (\n                    <Loading />\n                ) : (\n                    // Load each history item from the history array\n                    <React.Fragment>\n                        { \n                            launches.map((hist) => {\n                                return (\n                                    <div id={hist.id}>\n                                        <Card>\n                                            <b>Name:</b> {hist.mission_name}<br />\n                                            <b>Year:</b> {hist.launch_year}<br />\n                                            <b>Launch Site:</b> {hist.launch_site.site_name}<br />\n                                            <b>Details:</b> {hist.details}<br />\n                                            <a href={hist.links.wikipedia} target=\"_blank\" rel=\"noopener noreferrer\">Wikipedia</a>\n                                        </Card>\n                                    </div>\n                                );\n                            })\n                        }            \n                    </React.Fragment>\n                )};\n            }\n        </React.Fragment>\n    );\n}\n\nexport default Launches;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Loading from '../../components/Loading/Loading';\nimport Card from '../../components/Card/Card';\n\nconst Ships = () => {\n    \n    const [ loading, setLoading ] = useState(true);\n    const [ ships, setShips ] = useState([]);\n    \n    useEffect(() => {\n        const loadingTimer = setTimeout(() => {\n            clearTimeout(loadingTimer);\n            axios.get('https://api.spacexdata.com/v3/ships').then((response) => {\n                //console.log(response.data);\n                setShips(response.data);\n                setLoading(false);\n            });\n        }, 1500);\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                // Run loader animation\n                loading ? (\n                    <Loading />\n                ) : (\n                    // Load each rocket from the rocket array\n                    <React.Fragment>\n                        { \n                            ships.map((rock) => {\n                                return (\n                                    <div id={rock.id}>\n                                        <Link to={`/ships/${rock.ship_id}`}>\n                                            <Card>\n                                                <b>Ship Name:</b> {rock.ship_name}<br />\n                                                <b>Ship Type:</b> {rock.ship_type}<br />\n                                                <b>status:</b> {rock.status}<br />\n                                            </Card>\n                                        </Link>\n                                    </div>\n                                );\n                            })\n                        }            \n                    </React.Fragment>\n                )\n            }\n        </React.Fragment>\n    );\n}\n\nexport default Ships;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nimport Loading from '../../components/Loading/Loading';\nimport Card from '../../components/Card/Card';\n\nconst ShipDetails = (props) => {\n    \n    const { shipDetailsId } = props.match.params;\n\n    const [ loading, setLoading ] = useState(true);\n    const [ shipDetails, setShipDetails ] = useState({});\n    \n    useEffect(() => {\n        const loadingTimer = setTimeout(() => {\n            clearTimeout(loadingTimer);\n            axios.get(`https://api.spacexdata.com/v3/ships/${shipDetailsId}`).then((response) => {\n                //console.log(response.data);\n                setShipDetails(response.data);\n                setLoading(false);\n            });\n        }, 1500);\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                // Run loader animation\n                loading ? (\n                    <Loading />\n                ) : (\n                    // Load info for this rocket\n                    <React.Fragment>\n                        { \n                            <div>\n                                <Card>\n                                    <b>Ship Name:</b> {shipDetails.ship_name}<br />\n                                    <b>Weight(in Kg):</b> {shipDetails.weight_kg}<br />\n                                    <b>Year Build:</b> {shipDetails.year_built}<br />\n                                    <Link to=\"/ships\">Back to ships</Link>\n                                </Card>\n                            </div>\n                        }            \n                    </React.Fragment>\n                )\n            }\n        </React.Fragment>\n    );\n}\n\nShipDetails.propTypes = {\n    shipDetailsId: PropTypes.oneOfType([\n        PropTypes.string,\n    ]),\n}\n\nexport default ShipDetails;\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport styles from './App.module.css';\n\n// Import Components\nimport Header from './components/Header/Header';\nimport Loading from './components/Loading/Loading';\n\n// Import Pages\nimport History from './pages/History/History';\nimport Rockets from './pages/Rockets/Rockets';\nimport RocketDetails from './pages/RocketDetails/RocketDetails';\nimport About from './pages/About/About';\nimport Mission from './pages/Missions/Mission';\nimport Launchpad from './pages/launchpads/launchpad';\nimport Landpad from './pages/landpads/landpad';\nimport Launches from './pages/launches/launches';\nimport Ships from './pages/Ships/Ships';\nimport ShipDetails from './pages/ShipDetails/ShipDetails';\n\nfunction App() {\n  const [ loading,setLoading ] = useState(true);\n\n  // useEffect runs after component renders\n  useEffect(() => {\n    const loadingTimer = setTimeout(() => {\n      clearTimeout(loadingTimer);\n      setLoading(false);\n    }, 1500);\n  });\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.header}>\n        <Header />\n      </div>\n      <div className={styles.content}>\n        { \n          loading ? (\n            <Loading />\n          ) : (\n            <Switch>\n              <Route exact path=\"/\" component={History} />\n              <Route exact path=\"/rockets\" component={Rockets} />\n              <Route exact path=\"/ships\" component={Ships} />\n              <Route exact path=\"/mission\" component={Mission} />\n              <Route exact path=\"/launches\" component={Launches} />\n              <Route exact path=\"/launchpad\" component={Launchpad} />\n              <Route exact path=\"/landpad\" component={Landpad} />\n              <Route path=\"/rockets/:rocketDetailsId\" component={RocketDetails} />\n              <Route path=\"/ships/:shipDetailsId\" component={ShipDetails} />\n              <Route path=\"/about\" component={About} />\n            </Switch>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}